/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.programmingexer1;

import java.awt.Color;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author Admin
 */
public class CustomerForm extends javax.swing.JFrame {
    int id = 0; // Number of customers. Global Index variable
    String[][] cust = new String[10][7]; //Creates a 2d array for item. 10 max customers.
    ArrayList<Integer> deletedIDs = new ArrayList<Integer>(); //Keep track of deleted ID numbers
    ArrayList<Integer> dataStore = new ArrayList<Integer>(); //stores all data
    int index; //row variable
    /**
     * Creates new form CustomerForm
     */
    public CustomerForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cGender = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cEmail = new javax.swing.JTextField();
        eLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cAddress = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cContactNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cBirthdate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        bLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Customer Name:");

        jLabel2.setFont(new java.awt.Font("Malgun Gothic", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Customer Recording System");

        cGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        cGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cGenderActionPerformed(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer ID:");

        cId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cIdActionPerformed(evt);
            }
        });

        jLabel4.setText("Customer Email:");

        cEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cEmailActionPerformed(evt);
            }
        });
        cEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cEmailKeyReleased(evt);
            }
        });

        eLabel.setText("[a-z]@[a-z].com");

        jLabel5.setText("Customer Address:");

        jLabel6.setText("Customer Contact #");

        cContactNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cContactNoActionPerformed(evt);
            }
        });

        jLabel7.setText("Customer Birthdate:");

        cBirthdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cBirthdateKeyReleased(evt);
            }
        });

        jLabel8.setText("Customer Gender:");

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        bLabel.setText("mm/dd/yyyy");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Address", "Contact #", "Email", "Birthdate", "Gender"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jmenu1.setText("File");
        jmenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Products");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmenu1.add(jMenuItem1);

        jMenuItem2.setText("Orders");
        jmenu1.add(jMenuItem2);

        jMenuBar1.add(jmenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel7))
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cEmail)
                                    .addComponent(cBirthdate)
                                    .addComponent(cContactNo)
                                    .addComponent(cId)
                                    .addComponent(cAddress)
                                    .addComponent(cName, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bLabel)
                                    .addComponent(eLabel)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jButton1)
                            .addComponent(jButton3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cAddress))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cContactNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cEmail)
                            .addComponent(eLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cBirthdate)
                            .addComponent(bLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cGenderActionPerformed

    public Boolean minorChecker = false;
    public Boolean emailChecker = false;
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (cName.getText().length() == 0 || cEmail.getText().length() == 0 || cBirthdate.getText().length() == 0 || cAddress.getText().length() == 0 || cContactNo.getText().length() == 0) //check if incomplete
            messagebox("Incomplete.", "Record");
        else if (emailChecker == false) { //check if invalid email format
            messagebox("Invalid email format", "Record");
        } 
        else if (minorChecker == false) { //not minor
            messagebox("Saved!", "Record");
            cId.setText(String.valueOf(Integer.parseInt(cId.getText())+1));
        }
        else if (minorChecker == true) { //minor
            messagebox("Minors not allowed.", "Record");
        }
        
        DefaultTableModel tblmodel = (DefaultTableModel) jTable1.getModel(); // Gets the table object
        if (id == 0) // Check if table is empty
            tblmodel.setRowCount(0); // Clears/empties table contents
        
        String[] item = {cId.getText(), cName.getText(), cAddress.getText(), cContactNo.getText(), cEmail.getText(), cBirthdate.getText(), (String)cGender.getSelectedItem()}; // Gets values from text fields and assigns them to this array
        tblmodel.addRow(item); // Creates a row for the item array to the table
        
        /*try{
            for(int y = 0; y < 7; y++) { // Assigns the information to the 2d array cust[][], item contains the information of each row
                cust[id][y] = item[y];
            }
        }
        catch (Exception e) {
            System.out.println("Exception: " + e);
        }*/
        
        //rest is by me
        try{
            for(int y = 0; y < 7; y++) { // Assigns the information to the 2d array cust[][], item contains the information of each row
                cust[id][y] = item[y];
            }
        }
        catch (Exception e) {
            System.out.println("Exception: " + e);
        }
        id++;
        
        if (deletedIDs.size() > 0) {
            id = deletedIDs.get(0);
            try {
                for(int y = 1; y < cust[id].length; y++) { // Assigns the information to the 2d array cust[][], item contains the information of each row
                    cust[id][y] = item[y];
                }
            }
            catch (Exception e) {
                System.out.println("Note: " + e);
            }
            deletedIDs.remove(0);
        }
        
        //for debugging purposes
        for(int x = 0; x < cust.length; x++) {
            for(int y = 0; y < cust[0].length; y++) {
                System.out.print(cust[x][y] + " ");
            }
            System.out.print('\n');
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        Products form = new Products();
        form.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void cIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cIdActionPerformed

    private void cEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cEmailKeyReleased
        Boolean at = false;
        Boolean dotcom = false;
        for (int x = 1; x <= cEmail.getText().length(); x++) {
            if (cEmail.getText().substring(x-1, x).equals("@") && x > 3) {
                at = true;
            } 
            else {
                eLabel.setForeground(Color.red);
                eLabel.setText("Bad Email");
                emailChecker = false;
            }
            if (x > 8 && cEmail.getText().substring(x-4, x).equals(".com") && at == true) {
                dotcom = true;
            }
            else {
                eLabel.setForeground(Color.red);
                eLabel.setText("Bad Email");
                emailChecker = false;
            }
            if (at == true && dotcom == true) {
                eLabel.setForeground(Color.green);
                eLabel.setText("Good Email");
                emailChecker = true;
            }
        }
    }//GEN-LAST:event_cEmailKeyReleased

    private void jmenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmenu1ActionPerformed
        Products abc = new Products();
        abc.setVisible(true);
    }//GEN-LAST:event_jmenu1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        cId.setEditable(false);
        cId.setText("0");
    }//GEN-LAST:event_formWindowOpened

    private void cContactNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cContactNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cContactNoActionPerformed

    private void cEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cEmailActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Deletes selected row
        DefaultTableModel tblmodel = (DefaultTableModel) jTable1.getModel();
        //int rowToDelete = jTable1.getSelectedRow() + 1; //variable to store cust row index
        tblmodel.removeRow(jTable1.getSelectedRow());
        int IDNo = Integer.parseInt(cId.getText());
        deletedIDs.add(IDNo);
        Collections.sort(deletedIDs);
        System.out.println(deletedIDs.get(0));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cBirthdateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cBirthdateKeyReleased
        Boolean month = false;
        Boolean day = false;
        Boolean year = false;
        Boolean firstSlash = false;
        Boolean secondSlash = false;
        String birthdate = cBirthdate.getText();
        for (int x = 1; x <= cBirthdate.getText().length(); x++) {
            if (cBirthdate.getText().substring(x-1, x).equals("/") && x > 1) { //month
                firstSlash = true;
                if (Integer.parseInt(birthdate.substring(0, 2)) > 0 && Integer.parseInt(birthdate.substring(0, 2)) < 13) {
                    month = true;
                }
                else {
                        bLabel.setForeground(Color.red);
                        bLabel.setText("Invalid Birthdate");
                }
            }
            if (cBirthdate.getText().substring(x-1, x).equals("/") && firstSlash == true && x > 3) { //day
                secondSlash = true;
                if (Integer.parseInt(birthdate.substring(3, 5)) > 0 && Integer.parseInt(birthdate.substring(3, 5)) < 32) {
                    day = true;
                }
                else {
                        bLabel.setForeground(Color.red);
                        bLabel.setText("Invalid Birthdate");
                }
            }
            if (x > 7) { //year
                if (Integer.parseInt(birthdate.substring(6, 8)) > 3 && Integer.parseInt(birthdate.substring(6, 8)) < 21) {
                    bLabel.setForeground(Color.red);
                    bLabel.setText("Minor");
                    minorChecker = true; //user is underage
                }
                else {
                    minorChecker = false;
                    year = true;
                    if (month == true && day == true && year == true) {
                    bLabel.setForeground(Color.green);
                    bLabel.setText("Valid Birthdate");
                    }
                    else {
                        bLabel.setForeground(Color.red);
                        bLabel.setText("Invalid Birthdate");
                    }
                }
            }
            else {
                bLabel.setForeground(Color.red);
                bLabel.setText("Invalid Birthdate");
            }
        }   
    }//GEN-LAST:event_cBirthdateKeyReleased

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int[] selectRow = jTable1.getSelectedRows(); // array that stores selected row's data
        // Displays the selected row's data to text fields
        cId.setText(jTable1.getValueAt(selectRow[0], 0).toString());
        cName.setText(jTable1.getValueAt(selectRow[0], 1).toString());
        cAddress.setText(jTable1.getValueAt(selectRow[0], 2).toString());
        cContactNo.setText(jTable1.getValueAt(selectRow[0], 3).toString());
        cEmail.setText(jTable1.getValueAt(selectRow[0], 4).toString());
        cBirthdate.setText(jTable1.getValueAt(selectRow[0], 5).toString());
        cGender.setSelectedItem(jTable1.getValueAt(selectRow[0], 6).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Update selected row
        DefaultTableModel tblmodel = (DefaultTableModel) jTable1.getModel();
        int i = jTable1.getSelectedRow();
        if (i >= 0) {
            tblmodel.setValueAt(cId.getText(), i, 0);
            tblmodel.setValueAt(cName.getText(), i, 1);
            tblmodel.setValueAt(cAddress.getText(), i, 2);
            tblmodel.setValueAt(cContactNo.getText(), i, 3);
            tblmodel.setValueAt(cEmail.getText(), i, 4);
            tblmodel.setValueAt(cBirthdate.getText(), i, 5);
            tblmodel.setValueAt(cGender.getSelectedItem(), i, 6);
        }   
    }//GEN-LAST:event_jButton3ActionPerformed
    private void messagebox (String msg, String titlebar) {
        JOptionPane.showMessageDialog(null, msg, titlebar, JOptionPane.INFORMATION_MESSAGE);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bLabel;
    private javax.swing.JTextField cAddress;
    private javax.swing.JTextField cBirthdate;
    private javax.swing.JTextField cContactNo;
    private javax.swing.JTextField cEmail;
    private javax.swing.JComboBox<String> cGender;
    private javax.swing.JTextField cId;
    private javax.swing.JTextField cName;
    private javax.swing.JLabel eLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JMenu jmenu1;
    // End of variables declaration//GEN-END:variables
}
